<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Math on Programming Notes</title>
    <link>https://nspool.github.io/categories/math/</link>
    <description>Recent content in Math on Programming Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>This work is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License.</copyright>
    <lastBuildDate>Wed, 28 Jan 2015 22:18:56 +0000</lastBuildDate>
    
	<atom:link href="https://nspool.github.io/categories/math/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Counting Happy Numbers in Mathematica</title>
      <link>https://nspool.github.io/2015/01/happy-numbers/</link>
      <pubDate>Wed, 28 Jan 2015 22:18:56 +0000</pubDate>
      
      <guid>https://nspool.github.io/2015/01/happy-numbers/</guid>
      <description>Here is a Mathematica snippit to count the number of Happy Numbers up to 1000:
Length[Select[Range[1000],FixedPoint[Total[IntegerDigits[#]^2]&amp;amp;,#,10]==1&amp;amp;]] </description>
    </item>
    
    <item>
      <title>Partitioning Sets</title>
      <link>https://nspool.github.io/2014/08/notes-from-a-combinatorial-problem/</link>
      <pubDate>Fri, 01 Aug 2014 09:00:00 +0000</pubDate>
      
      <guid>https://nspool.github.io/2014/08/notes-from-a-combinatorial-problem/</guid>
      <description>We have a program that performs a comparison of every pair of elements in a database, and then compares the result with the median value of all values. It was suggested that the program should instead make pairwise comparisons within every possible combination of subsets. How many comparisons would we end up making?
For this example, each element in our database will be represented by an integer. We call these elements the population which is then partitioned into all possible distinct pairwise disjoint subsets .</description>
    </item>
    
  </channel>
</rss>